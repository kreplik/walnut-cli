#!/bin/bash
# Setup script for Walnut EVM Debugger configuration

set -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[0;33m'
NC='\033[0m'

echo -e "${BLUE}Walnut EVM Debugger Setup${NC}"
echo "=========================="
echo

# Check if walnut.config.local already exists
if [ -f "$SCRIPT_DIR/walnut.config.local" ]; then
    echo -e "${YELLOW}Configuration file already exists: walnut.config.local${NC}"
    read -p "Do you want to update it? (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Setup cancelled."
        exit 0
    fi
fi

# Check for Solidity compiler with ETHDebug support
echo -e "${BLUE}Checking Solidity compiler...${NC}"
if command -v solc &> /dev/null; then
    SOLC_VERSION=$(solc --version | grep -oE 'Version: [0-9]+\.[0-9]+\.[0-9]+' | cut -d' ' -f2)
    echo -e "${GREEN}Found solc version: $SOLC_VERSION${NC}"
    
    # Parse version
    IFS='.' read -r MAJOR MINOR PATCH <<< "$SOLC_VERSION"
    
    # Check if version supports ETHDebug (0.8.29+)
    if [ "$MAJOR" -eq 0 ] && [ "$MINOR" -eq 8 ] && [ "$PATCH" -ge 29 ]; then
        echo -e "${GREEN}âœ“ Solidity $SOLC_VERSION supports ETHDebug${NC}"
        SOLC_PATH=$(which solc)
    else
        echo -e "${YELLOW}Warning: Solidity $SOLC_VERSION does not support ETHDebug (requires 0.8.29+)${NC}"
        echo -e "${YELLOW}You may need to specify a custom solc path when deploying${NC}"
        SOLC_PATH=""
    fi
else
    echo -e "${YELLOW}solc not found in PATH${NC}"
    echo -e "${YELLOW}You will need to specify a solc path when deploying${NC}"
    SOLC_PATH=""
fi

# Get RPC URL
echo -e "\n${BLUE}Ethereum RPC Configuration${NC}"
echo "For Anvil, use: anvil --fork-url <YOUR_RPC> --steps-tracing"
read -p "Enter RPC URL [http://localhost:8545]: " RPC_URL
RPC_URL="${RPC_URL:-http://localhost:8545}"

# Test RPC connection
echo -n "Testing RPC connection... "
if curl -s -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' "$RPC_URL" > /dev/null 2>&1; then
    echo -e "${GREEN}OK${NC}"
else
    echo -e "${YELLOW}Failed (connection will be tested when needed)${NC}"
fi

# Get private key
echo -e "\n${BLUE}Private Key Configuration${NC}"
echo "Default is Anvil's test account #0"
read -p "Enter private key [use default]: " PRIVATE_KEY
PRIVATE_KEY="${PRIVATE_KEY:-0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80}"

# Debug directory
read -p "Debug output directory [debug]: " DEBUG_DIR
DEBUG_DIR="${DEBUG_DIR:-debug}"

# Create configuration file
cat > "$SCRIPT_DIR/walnut.config.local" <<EOF
# Walnut EVM Debugger Configuration
# Generated by setup-walnut.sh on $(date)

# Path to solc binary (optional - can be overridden with --solc flag)
SOLC_PATH="$SOLC_PATH"

# Default RPC URL (Anvil endpoint)
RPC_URL="$RPC_URL"

# Default private key (Anvil's test account #0)
PRIVATE_KEY="$PRIVATE_KEY"

# Debug output directory
DEBUG_DIR="$DEBUG_DIR"
EOF

echo -e "\n${GREEN}Configuration saved to: walnut.config.local${NC}"

# Test the setup
echo -e "\n${BLUE}Testing setup...${NC}"

# Test solc if found
if [ -n "$SOLC_PATH" ]; then
    echo -n "Testing solc... "
    if "$SOLC_PATH" --version > /dev/null 2>&1; then
        echo -e "${GREEN}OK${NC}"
    else
        echo -e "${YELLOW}Warning: solc test failed${NC}"
    fi
fi

# Install Python dependencies
echo -e "\n${BLUE}Python Dependencies${NC}"
echo "The transaction debugger requires Python packages: web3, eth-utils"
read -p "Install Python dependencies? (y/N) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    pip install -r "$SCRIPT_DIR/requirements.txt"
fi

echo -e "\n${GREEN}Setup complete!${NC}"
echo
echo "You can now use the deployment script:"
echo -e "  ${BLUE}cd /path/to/your/project${NC}"
echo -e "  ${BLUE}$SCRIPT_DIR/scripts/deploy-contract.sh Counter src/Counter.sol${NC}"
echo
echo "Or override settings with command line options:"
echo -e "  ${BLUE}$SCRIPT_DIR/scripts/deploy-contract.sh --solc=/custom/path Counter src/Counter.sol${NC}"
echo
echo "Remember to run Anvil with tracing enabled:"
echo -e "  ${BLUE}anvil --fork-url <YOUR_RPC> --steps-tracing${NC}"